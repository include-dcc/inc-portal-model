

// Definition: Construct a Condition record. These will have either Mondo and/or HP code
//
// Arguments: 
//  study - This is the full study object created by Whistler
//  condition - Row containing condition code and it's response (condition_status)
//
def Condition(study, condition) {
    var subject_id: condition.participant_id;
    var coding: HarmonizeMapped(condition.condition_description, "condition_description");

    //condition_description: condition.condition_description;

    //if (~$IsNil(coding) and condition.condition_interpretation = "Observed") {
    if (~$IsNil(coding)) {
        meta.tag[]: StudyMeta(study);
        
        identifier[]: Key_Identifier(study, "Condition", BuildConditionId(study, subject_id, condition));
        identifier[0].use: "official";
        subject: Reference_Key_Identifier(study, "Patient", subject_id);

        verificationStatus: HarmonizeAsCoding(condition.condition_interpretation, "ConditionPresent");

        category[0].coding[0].system: "http://terminology.hl7.org/CodeSystem/condition-category";
        category[0].coding[0].code: "encounter-diagnosis";
        category[0].coding[0].display: "Encounter Diagnosis";

        code.coding[]: coding;
        code.coding[]: HarmonizeMapped("Diagnosis Source", "condition");
        code.text: condition.condition_description;

        resourceType: "Condition";
    }
}

def ProcessCondition(study, condition) {
    out condition: Condition(study, condition);
}
